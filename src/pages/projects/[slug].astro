---
import { getCollection, type CollectionEntry } from "astro:content";
import Layout from "../../layouts/Layout.astro";
import { render } from "astro:content";

export async function getStaticPaths() {
  const projects = await getCollection("projects");
  return projects.map((project: CollectionEntry<"projects">) => ({
    params: { slug: project.id },
    props: { project },
  }));
}

interface Props {
  project: CollectionEntry<"projects">;
}

const { project }: Props = Astro.props;
const { Content } = await render(project);
---

<Layout title={project.data.name}>
  <main>

    <section class="px-4 lg:px-6 pt-6">
      <div class="mx-auto max-w-4xl">
        <div class="mb-4">
          {project.data.image && (
            <div class="mb-3 rounded overflow-hidden">
              <img 
                src={project.data.image} 
                alt={project.data.name} 
                class="w-full h-56 lg:h-72 object-cover"
                transition:name={`project-image-${project.id}`}
              />
            </div>
          )}
          
          <h1 class="mb-2 font-medium text-slate-900 text-3xl lg:text-4xl" transition:name={`project-title-${project.id}`}>
            {project.data.name}
          </h1>
          <p class="mb-3 text-neutral text-base">
            {project.data.description}
          </p>
          
          <div class="flex flex-wrap items-center gap-2 mb-3">
            <span class={`px-3 py-1.5 rounded text-sm ${
              project.data.state === "Fertig" 
                ? "bg-secondary/10 text-secondary-hover" 
                : "bg-accent/10 text-accent"
            }`}>
              {project.data.state}
            </span>
            {project.data.featured && (
              <span class="bg-primary/10 px-3 py-1.5 rounded font-medium text-primary text-sm">
                ★ Featured
              </span>
            )}
          </div>
        </div>
      </div>
    </section>


    <section class="bg-background-light px-4 lg:px-6 py-3">
      <div class="mx-auto max-w-4xl">

        <div class="mb-4">
          <h2 class="mb-2 font-medium text-slate-900 text-xl">Technologien</h2>
          <div class="flex flex-wrap gap-2">
            {project.data.tags.map((tag: string) => (
              <span class="bg-white px-3 py-1.5 border border-neutral-light/30 hover:border-primary/30 rounded text-neutral-dark hover:text-primary text-sm transition-colors duration-200">
                {tag}
              </span>
            ))}
          </div>
        </div>


        <div class="mb-4">
          <h2 class="mb-2 font-medium text-slate-900 text-xl">Links</h2>
          <div class="flex flex-wrap gap-3">
            {project.data.github && (
              <a 
                href={project.data.github} 
                target="_blank" 
                rel="noopener noreferrer" 
                class="inline-flex items-center gap-2 bg-neutral-darker hover:bg-slate-800 px-4 py-2.5 rounded font-medium text-white text-sm transition-colors duration-200"
              >
                GitHub
              </a>
            )}
            {project.data.links?.map((link: {title: string, url: string}) => (
              <a 
                href={link.url} 
                target="_blank" 
                rel="noopener noreferrer" 
                class="inline-flex items-center gap-2 bg-primary hover:bg-primary-hover px-4 py-2.5 rounded font-medium text-white text-sm transition-colors duration-200"
              >
                {link.title}
              </a>
            ))}
          </div>
        </div>


        {(project.data.startDate || project.data.endDate) && (
          <div class="mb-4">
            <h2 class="mb-2 font-medium text-slate-900 text-xl">Timeline</h2>
            <div class="flex lg:flex-row flex-col gap-3 text-neutral text-sm">
              {project.data.startDate && (
                <div class="flex items-center gap-2">
                  <span class="font-medium">Gestartet:</span>
                  <span>{project.data.startDate.toLocaleDateString("de-DE")}</span>
                </div>
              )}
              {project.data.endDate && (
                <div class="flex items-center gap-2">
                  <span class="font-medium">Abgeschlossen:</span>
                  <span>{project.data.endDate.toLocaleDateString("de-DE")}</span>
                </div>
              )}
            </div>
          </div>
        )}
      </div>
    </section>


    <section class="px-4 lg:px-6 py-4">
      <div class="mx-auto max-w-4xl">
        <div class="max-w-none prose prose-slate">
          <Content />
        </div>
      </div>
    </section>


    <section class="px-4 lg:px-6 py-3 border-neutral-light/30 border-t">
      <div class="mx-auto max-w-4xl">
        <a 
          href="/projects" 
          class="inline-flex items-center gap-2 font-medium text-primary hover:text-primary-hover text-sm transition-colors duration-200"
        >
          <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"/>
          </svg>
          Zurück zu allen Projekten
        </a>
      </div>
    </section>
  </main>
</Layout>


