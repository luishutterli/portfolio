---
import { getCollection, type CollectionEntry } from "astro:content";
import Layout from "../../layouts/Layout.astro";
import { render } from "astro:content";

export async function getStaticPaths() {
  const projects = await getCollection("projects");
  return projects.map((project: CollectionEntry<"projects">) => ({
    params: { slug: project.id },
    props: { project },
  }));
}

interface Props {
  project: CollectionEntry<"projects">;
}

const { project }: Props = Astro.props;
const { Content } = await render(project);
---

<Layout title={project.data.name}>
  <div class="relative bg-gradient-to-br from-background-light via-background-blue to-background-cyan min-h-screen overflow-hidden">
    <div class="absolute inset-0 opacity-[0.03]" style="background-image: radial-gradient(circle at 1px 1px, rgba(59, 130, 246, 0.4) 1px, transparent 0); background-size: 20px 20px;"></div>
    <div class="top-10 left-10 absolute bg-gradient-to-r from-blue-400/15 to-purple-500/15 blur-3xl rounded-full w-96 h-96"></div>
    <div class="right-20 bottom-20 absolute bg-gradient-to-r from-cyan-400/15 to-teal-500/15 blur-3xl rounded-full w-80 h-80"></div>
    <div class="top-1/2 right-10 absolute bg-gradient-to-r from-emerald-400/12 to-blue-500/12 blur-3xl rounded-full w-64 h-64"></div>
    <div class="bottom-10 left-1/3 absolute bg-gradient-to-r from-violet-500/12 to-cyan-400/12 blur-3xl rounded-full w-56 h-56"></div>

    <div class="z-10 relative px-4 lg:px-6 py-8">
      <div class="mx-auto max-w-6xl">
        <div class="mb-6">
          <a 
            href="/projects" 
            class="group inline-flex items-center gap-2 bg-white/70 hover:bg-white/90 hover:shadow-lg backdrop-blur-sm px-4 py-2 border border-white/20 hover:border-primary/30 rounded-lg font-medium text-neutral-dark hover:text-primary text-sm transition-all duration-300"
          >
            <svg class="w-4 h-4 transition-transform group-hover:-translate-x-1 duration-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"/>
            </svg>
            Zurück zu allen Projekten
          </a>
        </div>

        {project.data.image && (
          <div class="bg-white shadow-2xl mb-4 p-1 rounded-2xl overflow-hidden">
            <img 
              src={project.data.image} 
              alt={project.data.name} 
              class="rounded-xl w-full object-cover aspect-video"
              transition:name={`project-image-${project.id}`}
            />
          </div>
        )}
        
        <div class="mb-2 text-center">
          <h1 class="bg-clip-text bg-gradient-to-r from-neutral-dark via-primary to-secondary pb-3 font-bold text-transparent text-4xl lg:text-5xl" transition:name={`project-title-${project.id}`}>
            {project.data.name}
          </h1>
          <div class="flex flex-wrap justify-center items-center gap-2 mb-2">
            <span class={`px-3 py-1.5 rounded-full font-medium text-xs shadow-md ${
              project.data.state === "Fertig" 
                ? "bg-gradient-to-r from-secondary/80 to-secondary text-white" 
                : "bg-gradient-to-r from-accent/80 to-accent text-white"
            }`}>
              {project.data.state}
            </span>
            {project.data.featured && (
              <span class="bg-gradient-to-r from-primary/80 to-primary shadow-md px-3 py-1.5 rounded-full font-medium text-white text-xs">
                ★ Featured
              </span>
            )}
            {project.data.tags.slice(0, 3).map((tag: string) => (
              <span class="bg-white/80 px-2 py-1 border border-neutral-light/30 rounded-md text-neutral-dark text-xs">
                {tag}
              </span>
            ))}
            {project.data.tags.length > 3 && (
              <a 
                href="#technologies-used-list" 
                class="text-neutral text-xs hover:underline cursor-pointer"
              >
                +{project.data.tags.length - 3} mehr
              </a>
            )}
          </div>
          <p class="mx-auto mb-4 text-slate-700 text-lg lg:text-xl leading-relaxed">
            {project.data.description}
          </p>
        </div>

        <div class="bg-white/60 shadow-lg backdrop-blur-sm mb-8 p-4 border border-white/20 rounded-2xl">
          <div class="prose-code:bg-gray-400/30 prose-code:p-0.5 prose-code:rounded-md max-w-none prose-code:before:content-none prose-code:after:content-none prose">
            <Content />
          </div>
        </div>

        <div class="gap-6 grid md:grid-cols-3">
          <div id="technologies-used-list" class="bg-white/40 backdrop-blur-sm p-4 border border-white/20 rounded-xl">
            <h3 class="mb-3 font-semibold text-slate-900 text-lg">Technologien</h3>
            <div class="flex flex-wrap gap-2">
              {project.data.tags.map((tag: string) => (
                <span class="bg-white/80 hover:bg-white hover:shadow-sm px-2 py-1.5 border border-neutral-light/30 hover:border-primary/50 rounded-md font-medium text-neutral-dark hover:text-primary text-xs hover:scale-105 transition-all duration-300">
                  {tag}
                </span>
              ))}
            </div>
          </div>

          <div class="bg-white/40 backdrop-blur-sm p-4 border border-white/20 rounded-xl">
            <h3 class="mb-3 font-semibold text-slate-900 text-lg">Links</h3>
            <div class="flex flex-col gap-2">
              {project.data.github && (
                <a 
                  href={project.data.github} 
                  target="_blank" 
                  rel="noopener noreferrer" 
                  class="group inline-flex items-center gap-2 bg-gradient-to-r from-neutral-darker hover:from-slate-800 to-slate-800 hover:to-neutral-darker hover:shadow-lg px-3 py-2 rounded-lg font-medium text-white text-xs hover:scale-105 transition-all duration-300"
                >
                  <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 24 24">
                    <path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.30.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"/>
                  </svg>
                  GitHub
                </a>
              )}
              {project.data.links?.map((link: {title: string, url: string}) => (
                <a 
                  href={link.url} 
                  target="_blank" 
                  rel="noopener noreferrer" 
                  class="group inline-flex items-center gap-2 bg-gradient-to-r from-primary hover:from-primary-hover to-primary-hover hover:to-primary hover:shadow-lg px-3 py-2 rounded-lg font-medium text-white text-xs hover:scale-105 transition-all duration-300"
                >
                  {link.title}
                </a>
              ))}
            </div>
          </div>

          {(project.data.startDate || project.data.endDate) && (
            <div class="bg-white/40 backdrop-blur-sm p-4 border border-white/20 rounded-xl">
              <h3 class="mb-3 font-semibold text-slate-900 text-lg">Timeline</h3>
              <div class="space-y-2">
                {project.data.startDate && (
                  <div class="flex items-center gap-2">
                    <div class="bg-green-500 rounded-full w-2 h-2"></div>
                    <div>
                      <span class="block font-medium text-slate-900 text-xs">Gestartet</span>
                      <span class="text-neutral text-xs">{project.data.startDate.toLocaleDateString("de-DE")}</span>
                    </div>
                  </div>
                )}
                {project.data.endDate && (
                  <div class="flex items-center gap-2">
                    <div class="bg-blue-500 rounded-full w-2 h-2"></div>
                    <div>
                      <span class="block font-medium text-slate-900 text-xs">Abgeschlossen</span>
                      <span class="text-neutral text-xs">{project.data.endDate.toLocaleDateString("de-DE")}</span>
                    </div>
                  </div>
                )}
              </div>
            </div>
          )}
        </div>
      </div>
    </div>
  </div>
</Layout>
