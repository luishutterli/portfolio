---
import { getCollection, type CollectionEntry } from "astro:content";
import Layout from "../../layouts/Layout.astro";
import { render } from "astro:content";

export async function getStaticPaths() {
  const projects = await getCollection("projects");
  return projects.map((project: CollectionEntry<"projects">) => ({
    params: { slug: project.id },
    props: { project },
  }));
}

interface Props {
  project: CollectionEntry<"projects">;
}

const { project }: Props = Astro.props;
const { Content } = await render(project);
---

<Layout title={project.data.name}>
  <main>
    <div class="mx-auto px-8 md:px-4 max-w-4xl">
      <header class="mb-12">
        <div class="flex md:flex-col flex-wrap justify-between items-center md:items-start gap-4 mb-8">
          <h1 class="m-0 font-bold text-slate-800 md:text-2xl text-4xl" transition:name={`project-title-${project.id}`}>{project.data.name}</h1>
          <div class="flex items-center md:self-start gap-4">
            <span class={`px-4 py-2 rounded-lg text-sm font-semibold uppercase ${
              project.data.state === 'Fertig' 
                ? 'bg-green-100 text-green-800' 
                : 'bg-amber-100 text-amber-800'
            }`}>
              {project.data.state}
            </span>
            {project.data.featured && (
              <span class="bg-blue-100 px-4 py-2 rounded-lg font-semibold text-blue-700 text-sm">Featured</span>
            )}
          </div>
        </div>
        
        {project.data.image && (
          <div class="mb-8">
            <img src={project.data.image} alt={project.data.name} class="shadow-lg rounded-lg w-full h-96 md:h-64 object-cover" transition:name={`project-image-${project.id}`} />
          </div>
        )}
        
        <p class="mb-8 text-slate-500 text-lg leading-relaxed">{project.data.description}</p>
        
        <div class="flex flex-wrap gap-2 mb-8">
          {project.data.tags.map((tag: string) => (
            <span class="bg-slate-100 px-4 py-2 rounded-lg font-medium text-slate-600 text-sm">{tag}</span>
          ))}
        </div>
        
        <div class="flex flex-wrap gap-4 mb-8">
          {project.data.github && (
            <a href={project.data.github} target="_blank" rel="noopener noreferrer" class="inline-flex items-center gap-2 bg-gray-800 hover:bg-gray-900 px-6 py-3 rounded-lg font-medium text-white no-underline transition-colors duration-200">
              <svg width="20" height="20" viewBox="0 0 24 24" fill="currentColor">
                <path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"/>
              </svg>
              GitHub
            </a>
          )}
          {project.data.links?.map((link: {title: string, url: string}) => (
            <a href={link.url} target="_blank" rel="noopener noreferrer" class="bg-blue-700 hover:bg-blue-800 px-6 py-3 rounded-lg font-medium text-white no-underline transition-colors duration-200">
              {link.title}
            </a>
          ))}
        </div>
        
        {(project.data.startDate || project.data.endDate) && (
          <div class="flex md:flex-col flex-wrap gap-8 md:gap-2 text-slate-500 text-sm">
            {project.data.startDate && (
              <span>Gestartet: {project.data.startDate.toLocaleDateString('de-DE')}</span>
            )}
            {project.data.endDate && (
              <span>Abgeschlossen: {project.data.endDate.toLocaleDateString('de-DE')}</span>
            )}
          </div>
        )}
      </header>
      
      <div class="max-w-none text-gray-700 leading-relaxed prose">
        <Content />
      </div>
      
      <nav class="mt-12 pt-8 border-slate-200 border-t">
        <a href="/projects" class="font-medium text-blue-700 hover:underline no-underline">← Zurück zu allen Projekten</a>
      </nav>
    </div>
  </main>
</Layout>


