---
import { getCollection, type CollectionEntry } from "astro:content";
import Layout from "../../layouts/Layout.astro";
import ProjectCard from "../../components/ProjectCard.astro";

const projects = await getCollection("projects");

// Sort projects: featured first, then by state (Fertig first), then by start date
const sortedProjects = projects.sort(
  (a: CollectionEntry<"projects">, b: CollectionEntry<"projects">) => {
    if (a.data.featured && !b.data.featured) return -1;
    if (!a.data.featured && b.data.featured) return 1;

    if (a.data.state === "Fertig" && b.data.state === "In Arbeit") return -1;
    if (a.data.state === "In Arbeit" && b.data.state === "Fertig") return 1;

    const aDate = a.data.startDate || new Date(0);
    const bDate = b.data.startDate || new Date(0);
    return bDate.getTime() - aDate.getTime();
  },
);
---

<Layout title="Projekte">
  <main class="min-h-screen">
    <!-- Hero Section -->
    <section class="px-4 lg:px-6 pt-8 pb-4">
      <div class="mx-auto max-w-6xl">
        <div class="mb-6 text-center">
          <h1 class="mb-2 font-medium text-slate-900 text-2xl lg:text-3xl" transition:name="page-title">
            Projekte
          </h1>
          <p class="mx-auto max-w-xl text-slate-600 text-sm">
            Eine Auswahl meiner neuesten Arbeiten und Projekte
          </p>
        </div>
      </div>
    </section>

    <!-- Projects Grid -->
    <section class="px-4 lg:px-6 pb-12">
      <div class="mx-auto max-w-6xl">
        <div class="gap-4 lg:gap-6 grid grid-cols-1 md:grid-cols-2 xl:grid-cols-3">
          {sortedProjects.map((project: CollectionEntry<"projects">) => (
            <ProjectCard project={project} />
          ))}
        </div>
      </div>
    </section>
  </main>
</Layout>
