---
import { type CollectionEntry } from "astro:content";

interface Props {
  project: CollectionEntry<"projects">;
  showImage?: boolean;
  showFullDescription?: boolean;
}

const { project, showImage = true, showFullDescription = false } = Astro.props;
---

<article class="group bg-white hover:shadow-sm border border-slate-200 hover:border-slate-300 rounded-lg h-full overflow-hidden transition-all duration-200">
  <div class="p-5">
    {
      showImage && project.data.image && (
        <div class="relative mb-4 rounded aspect-video overflow-hidden">
          <img
            src={project.data.image}
            alt={project.data.name}
            class="w-full h-full object-cover"
            transition:name={`project-image-${project.id}`}
          />
        </div>
      )
    }
    
    <!-- Header -->
    <div class="mb-3">
      <div class="flex justify-between items-start gap-3 mb-2">
        <h3 class="font-medium text-slate-900 text-lg leading-tight">
          <a
            href={`/projects/${project.id}`}
            class="text-slate-900 hover:text-slate-600 no-underline"
            transition:name={`project-title-${project.id}`}
          >
            {project.data.name}
          </a>
        </h3>
        
        <div class="flex flex-shrink-0 items-center gap-1.5">
          <span
            class={`px-2 py-1 rounded text-xs ${
              project.data.state === "Fertig"
                ? "bg-green-100 text-green-800"
                : "bg-yellow-100 text-yellow-800"
            }`}
          >
            {project.data.state}
          </span>
          {
            project.data.featured && (
              <span class="bg-blue-100 px-2 py-1 rounded text-blue-800 text-xs">
                ★
              </span>
            )
          }
        </div>
      </div>
      
      <!-- Tags -->
      <div class="flex flex-wrap gap-1.5 mb-3">
        {
          project.data.tags.slice(0, 4).map((tag: string) => (
            <span class="bg-slate-100 px-2 py-1 rounded text-slate-600 text-xs">
              {tag}
            </span>
          ))
        }
        {project.data.tags.length > 4 && (
          <span class="bg-slate-100 px-2 py-1 rounded text-slate-500 text-xs">
            +{project.data.tags.length - 4}
          </span>
        )}
      </div>
    </div>

    <!-- Description -->
    <p class="mb-4 text-slate-600 text-sm leading-relaxed">
      {
        showFullDescription
          ? project.data.description
          : project.data.description.length > 100
            ? project.data.description.substring(0, 100) + "..."
            : project.data.description
      }
    </p>

    <!-- Action -->
    <div class="flex justify-between items-center">
      <a
        href={`/projects/${project.id}`}
        class="font-medium text-slate-900 hover:text-slate-600 text-sm"
      >
        Details ansehen →
      </a>
    </div>
  </div>
</article>
